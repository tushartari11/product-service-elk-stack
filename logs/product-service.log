{"@timestamp":"2025-07-16T18:02:40.197064+02:00","@version":"1","message":"Starting ProductServiceApplication using Java 17.0.11 with PID 49935 (/Users/tushartari/tushar/tutorialprojects/springboot/product-service/target/classes started by tushartari in /Users/tushartari/tushar/tutorialprojects/springboot/product-service)","logger_name":"com.rekreation.springelk.ProductServiceApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-07-16T18:02:40.201112+02:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.rekreation.springelk.ProductServiceApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-07-16T18:02:40.914288+02:00","@version":"1","message":"Filter 'webMvcObservationFilter' configured for use","logger_name":"org.springframework.web.filter.ServerHttpObservationFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:02:41.150832+02:00","@version":"1","message":"9 mappings in 'requestMappingHandlerMapping'","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:02:41.174858+02:00","@version":"1","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:02:41.183478+02:00","@version":"1","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:02:41.198959+02:00","@version":"1","message":"ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:02:41.322144+02:00","@version":"1","message":"Started ProductServiceApplication in 1.449 seconds (process running for 1.945)","logger_name":"com.rekreation.springelk.ProductServiceApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-07-16T18:02:41.905164+02:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"RMI TCP Connection(1)-127.0.0.1","level":"INFO","level_value":20000}
{"@timestamp":"2025-07-16T18:02:41.905346+02:00","@version":"1","message":"Detected StandardServletMultipartResolver","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"RMI TCP Connection(1)-127.0.0.1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:02:41.905405+02:00","@version":"1","message":"Detected AcceptHeaderLocaleResolver","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"RMI TCP Connection(1)-127.0.0.1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:02:41.905452+02:00","@version":"1","message":"Detected FixedThemeResolver","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"RMI TCP Connection(1)-127.0.0.1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:02:41.905876+02:00","@version":"1","message":"Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@278c998","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"RMI TCP Connection(1)-127.0.0.1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:02:41.90606+02:00","@version":"1","message":"Detected org.springframework.web.servlet.support.SessionFlashMapManager@22ee7fdc","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"RMI TCP Connection(1)-127.0.0.1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:02:41.90617+02:00","@version":"1","message":"enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"RMI TCP Connection(1)-127.0.0.1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:02:41.906237+02:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"RMI TCP Connection(1)-127.0.0.1","level":"INFO","level_value":20000}
{"@timestamp":"2025-07-16T18:02:41.936356+02:00","@version":"1","message":"MongoDB health check failed","logger_name":"org.springframework.boot.actuate.data.mongo.MongoHealthIndicator","thread_name":"RMI TCP Connection(3)-127.0.0.1","level":"WARN","level_value":30000,"stack_trace":"org.springframework.data.mongodb.UncategorizedMongoDbException: Exception authenticating MongoCredential{mechanism=SCRAM-SHA-1, userName='root', source='product-service', password=<hidden>, mechanismProperties=<hidden>}\n\tat org.springframework.data.mongodb.core.MongoExceptionTranslator.doTranslateException(MongoExceptionTranslator.java:151)\n\tat org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:74)\n\tat org.springframework.data.mongodb.core.MongoTemplate.potentiallyConvertRuntimeException(MongoTemplate.java:3033)\n\tat org.springframework.data.mongodb.core.MongoTemplate.execute(MongoTemplate.java:588)\n\tat org.springframework.data.mongodb.core.MongoTemplate.executeCommand(MongoTemplate.java:520)\n\tat org.springframework.boot.actuate.data.mongo.MongoHealthIndicator.doHealthCheck(MongoHealthIndicator.java:46)\n\tat org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)\n\tat org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37)\n\tat org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:82)\n\tat org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:41)\n\tat org.springframework.boot.actuate.health.HealthEndpointSupport.getLoggedHealth(HealthEndpointSupport.java:172)\n\tat org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:145)\n\tat org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateContribution(HealthEndpointSupport.java:156)\n\tat org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:141)\n\tat org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:110)\n\tat org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:81)\n\tat org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:76)\n\tat org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:66)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)\n\tat org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:74)\n\tat org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60)\n\tat org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:124)\n\tat org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:97)\n\tat java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)\n\tat java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)\n\tat java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)\n\tat java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)\n\tat java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)\n\tat java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)\n\tat java.base/jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)\n\tat java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)\n\tat java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:712)\n\tat java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:399)\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:842)\nCaused by: com.mongodb.MongoSecurityException: Exception authenticating MongoCredential{mechanism=SCRAM-SHA-1, userName='root', source='product-service', password=<hidden>, mechanismProperties=<hidden>}\n\tat com.mongodb.internal.connection.SaslAuthenticator.wrapException(SaslAuthenticator.java:300)\n\tat com.mongodb.internal.connection.SaslAuthenticator.getNextSaslResponse(SaslAuthenticator.java:143)\n\tat com.mongodb.internal.connection.SaslAuthenticator.lambda$authenticate$0(SaslAuthenticator.java:71)\n\tat com.mongodb.internal.connection.SaslAuthenticator.doAsSubject(SaslAuthenticator.java:307)\n\tat com.mongodb.internal.connection.SaslAuthenticator.authenticate(SaslAuthenticator.java:67)\n\tat com.mongodb.internal.connection.DefaultAuthenticator.authenticate(DefaultAuthenticator.java:53)\n\tat com.mongodb.internal.connection.InternalStreamConnectionInitializer.finishHandshake(InternalStreamConnectionInitializer.java:89)\n\tat com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:238)\n\tat com.mongodb.internal.connection.UsageTrackingInternalConnection.open(UsageTrackingInternalConnection.java:53)\n\tat com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection.open(DefaultConnectionPool.java:631)\n\tat com.mongodb.internal.connection.DefaultConnectionPool$OpenConcurrencyLimiter.openWithConcurrencyLimit(DefaultConnectionPool.java:978)\n\tat com.mongodb.internal.connection.DefaultConnectionPool$OpenConcurrencyLimiter.openOrGetAvailable(DefaultConnectionPool.java:908)\n\tat com.mongodb.internal.connection.DefaultConnectionPool.get(DefaultConnectionPool.java:198)\n\tat com.mongodb.internal.connection.DefaultServer.getConnection(DefaultServer.java:94)\n\tat com.mongodb.internal.binding.ClusterBinding$ClusterBindingConnectionSource.getConnection(ClusterBinding.java:138)\n\tat com.mongodb.client.internal.ClientSessionBinding$SessionBindingConnectionSource.getConnection(ClientSessionBinding.java:161)\n\tat com.mongodb.internal.operation.SyncOperationHelper.withSuppliedResource(SyncOperationHelper.java:148)\n\tat com.mongodb.internal.operation.SyncOperationHelper.lambda$withSourceAndConnection$1(SyncOperationHelper.java:130)\n\tat com.mongodb.internal.operation.SyncOperationHelper.withSuppliedResource(SyncOperationHelper.java:156)\n\tat com.mongodb.internal.operation.SyncOperationHelper.withSourceAndConnection(SyncOperationHelper.java:129)\n\tat com.mongodb.internal.operation.SyncOperationHelper.lambda$executeRetryableRead$4(SyncOperationHelper.java:195)\n\tat com.mongodb.internal.operation.SyncOperationHelper.lambda$decorateReadWithRetries$13(SyncOperationHelper.java:317)\n\tat com.mongodb.internal.async.function.RetryingSyncSupplier.get(RetryingSyncSupplier.java:67)\n\tat com.mongodb.internal.operation.SyncOperationHelper.executeRetryableRead(SyncOperationHelper.java:201)\n\tat com.mongodb.internal.operation.SyncOperationHelper.executeRetryableRead(SyncOperationHelper.java:180)\n\tat com.mongodb.internal.operation.CommandReadOperation.execute(CommandReadOperation.java:52)\n\tat com.mongodb.client.internal.MongoClusterImpl$OperationExecutorImpl.execute(MongoClusterImpl.java:424)\n\tat com.mongodb.client.internal.MongoDatabaseImpl.executeCommand(MongoDatabaseImpl.java:215)\n\tat com.mongodb.client.internal.MongoDatabaseImpl.runCommand(MongoDatabaseImpl.java:184)\n\tat com.mongodb.client.internal.MongoDatabaseImpl.runCommand(MongoDatabaseImpl.java:179)\n\tat org.springframework.data.mongodb.core.MongoTemplate.lambda$executeCommand$3(MongoTemplate.java:520)\n\tat org.springframework.data.mongodb.core.MongoTemplate.execute(MongoTemplate.java:586)\n\t... 45 common frames omitted\nCaused by: com.mongodb.MongoCommandException: Command failed with error 18 (AuthenticationFailed): 'Authentication failed.' on server localhost:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"Authentication failed.\", \"code\": 18, \"codeName\": \"AuthenticationFailed\"}\n\tat com.mongodb.internal.connection.ProtocolHelper.getCommandFailureException(ProtocolHelper.java:210)\n\tat com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:520)\n\tat com.mongodb.internal.connection.InternalStreamConnection.sendAndReceiveInternal(InternalStreamConnection.java:448)\n\tat com.mongodb.internal.connection.InternalStreamConnection.lambda$sendAndReceive$0(InternalStreamConnection.java:375)\n\tat com.mongodb.internal.connection.InternalStreamConnection.sendAndReceive(InternalStreamConnection.java:378)\n\tat com.mongodb.internal.connection.CommandHelper.sendAndReceive(CommandHelper.java:100)\n\tat com.mongodb.internal.connection.CommandHelper.executeCommand(CommandHelper.java:49)\n\tat com.mongodb.internal.connection.SaslAuthenticator.sendSaslStart(SaslAuthenticator.java:236)\n\tat com.mongodb.internal.connection.SaslAuthenticator.getNextSaslResponse(SaslAuthenticator.java:141)\n\t... 75 common frames omitted\n"}
{"@timestamp":"2025-07-16T18:09:57.294425+02:00","@version":"1","message":"GET \"/api/product/health\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:09:57.304462+02:00","@version":"1","message":"Mapped to com.rekreation.springelk.controller.ProductController#healthCheck()","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:09:57.320268+02:00","@version":"1","message":"Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json, application/yaml]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:09:57.320969+02:00","@version":"1","message":"Writing [\"Running fine!\"]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:09:57.325189+02:00","@version":"1","message":"Completed 200 OK","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:10:17.881424+02:00","@version":"1","message":"GET \"/api/product\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:10:17.884284+02:00","@version":"1","message":"Mapped to com.rekreation.springelk.controller.ProductController#getAllProducts()","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:10:17.949976+02:00","@version":"1","message":"Failed to complete request: org.springframework.data.mongodb.UncategorizedMongoDbException: Exception authenticating MongoCredential{mechanism=SCRAM-SHA-1, userName='root', source='product-service', password=<hidden>, mechanismProperties=<hidden>}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:10:17.951101+02:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.data.mongodb.UncategorizedMongoDbException: Exception authenticating MongoCredential{mechanism=SCRAM-SHA-1, userName='root', source='product-service', password=<hidden>, mechanismProperties=<hidden>}] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8080-exec-3","level":"ERROR","level_value":40000,"stack_trace":"com.mongodb.MongoCommandException: Command failed with error 18 (AuthenticationFailed): 'Authentication failed.' on server localhost:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"Authentication failed.\", \"code\": 18, \"codeName\": \"AuthenticationFailed\"}\n\tat com.mongodb.internal.connection.ProtocolHelper.getCommandFailureException(ProtocolHelper.java:210)\n\tat com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:520)\n\tat com.mongodb.internal.connection.InternalStreamConnection.sendAndReceiveInternal(InternalStreamConnection.java:448)\n\tat com.mongodb.internal.connection.InternalStreamConnection.lambda$sendAndReceive$0(InternalStreamConnection.java:375)\n\tat com.mongodb.internal.connection.InternalStreamConnection.sendAndReceive(InternalStreamConnection.java:378)\n\tat com.mongodb.internal.connection.CommandHelper.sendAndReceive(CommandHelper.java:100)\n\tat com.mongodb.internal.connection.CommandHelper.executeCommand(CommandHelper.java:49)\n\tat com.mongodb.internal.connection.SaslAuthenticator.sendSaslStart(SaslAuthenticator.java:236)\n\tat com.mongodb.internal.connection.SaslAuthenticator.getNextSaslResponse(SaslAuthenticator.java:141)\n\tat com.mongodb.internal.connection.SaslAuthenticator.lambda$authenticate$0(SaslAuthenticator.java:71)\n\tat com.mongodb.internal.connection.SaslAuthenticator.doAsSubject(SaslAuthenticator.java:307)\n\tat com.mongodb.internal.connection.SaslAuthenticator.authenticate(SaslAuthenticator.java:67)\n\tat com.mongodb.internal.connection.DefaultAuthenticator.authenticate(DefaultAuthenticator.java:53)\n\tat com.mongodb.internal.connection.InternalStreamConnectionInitializer.finishHandshake(InternalStreamConnectionInitializer.java:89)\n\tat com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:238)\n\tat com.mongodb.internal.connection.UsageTrackingInternalConnection.open(UsageTrackingInternalConnection.java:53)\n\tat com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection.open(DefaultConnectionPool.java:631)\n\tat com.mongodb.internal.connection.DefaultConnectionPool$OpenConcurrencyLimiter.openWithConcurrencyLimit(DefaultConnectionPool.java:978)\n\tat com.mongodb.internal.connection.DefaultConnectionPool$OpenConcurrencyLimiter.openOrGetAvailable(DefaultConnectionPool.java:908)\n\tat com.mongodb.internal.connection.DefaultConnectionPool.get(DefaultConnectionPool.java:198)\n\tat com.mongodb.internal.connection.DefaultServer.getConnection(DefaultServer.java:94)\n\tat com.mongodb.internal.binding.ClusterBinding$ClusterBindingConnectionSource.getConnection(ClusterBinding.java:138)\n\tat com.mongodb.client.internal.ClientSessionBinding$SessionBindingConnectionSource.getConnection(ClientSessionBinding.java:161)\n\tat com.mongodb.internal.operation.SyncOperationHelper.withSuppliedResource(SyncOperationHelper.java:148)\n\tat com.mongodb.internal.operation.SyncOperationHelper.lambda$withSourceAndConnection$1(SyncOperationHelper.java:130)\n\tat com.mongodb.internal.operation.SyncOperationHelper.withSuppliedResource(SyncOperationHelper.java:156)\n\tat com.mongodb.internal.operation.SyncOperationHelper.withSourceAndConnection(SyncOperationHelper.java:129)\n\tat com.mongodb.internal.operation.FindOperation.lambda$execute$2(FindOperation.java:296)\n\tat com.mongodb.internal.operation.SyncOperationHelper.lambda$decorateReadWithRetries$13(SyncOperationHelper.java:317)\n\tat com.mongodb.internal.async.function.RetryingSyncSupplier.get(RetryingSyncSupplier.java:67)\n\tat com.mongodb.internal.operation.FindOperation.execute(FindOperation.java:307)\n\tat com.mongodb.internal.operation.FindOperation.execute(FindOperation.java:70)\n\tat com.mongodb.client.internal.MongoClusterImpl$OperationExecutorImpl.execute(MongoClusterImpl.java:424)\n\tat com.mongodb.client.internal.MongoIterableImpl.execute(MongoIterableImpl.java:156)\n\tat com.mongodb.client.internal.MongoIterableImpl.iterator(MongoIterableImpl.java:116)\n\tat org.springframework.data.mongodb.core.MongoTemplate.executeFindMultiInternal(MongoTemplate.java:2940)\n\tat org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2622)\n\tat org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2600)\n\tat org.springframework.data.mongodb.core.MongoTemplate.find(MongoTemplate.java:887)\n\tat org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:404)\n\tat org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:146)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)\n\tat org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)\n\tat org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:734)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.mongodb.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:158)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)\n\tat jdk.proxy2/jdk.proxy2.$Proxy101.findAll(Unknown Source)\n\tat com.rekreation.springelk.service.ProductService.getAllProducts(ProductService.java:34)\n\tat com.rekreation.springelk.controller.ProductController.getAllProducts(ProductController.java:27)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\n\tat org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)\n\tat java.base/java.lang.Thread.run(Thread.java:842)\n"}
{"@timestamp":"2025-07-16T18:10:17.955288+02:00","@version":"1","message":"\"ERROR\" dispatch for GET \"/error\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:10:17.955808+02:00","@version":"1","message":"Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:10:17.960153+02:00","@version":"1","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:10:17.960381+02:00","@version":"1","message":"Writing [{timestamp=Wed Jul 16 18:10:17 CEST 2025, status=500, error=Internal Server Error, path=/api/product (truncated)...]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:10:17.965869+02:00","@version":"1","message":"Exiting from \"ERROR\" dispatch, status 500","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:12:58.987553+02:00","@version":"1","message":"Starting ProductServiceApplication using Java 17.0.11 with PID 50181 (/Users/tushartari/tushar/tutorialprojects/springboot/product-service/target/classes started by tushartari in /Users/tushartari/tushar/tutorialprojects/springboot/product-service)","logger_name":"com.rekreation.springelk.ProductServiceApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-07-16T18:12:58.992006+02:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.rekreation.springelk.ProductServiceApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-07-16T18:12:59.626246+02:00","@version":"1","message":"Filter 'webMvcObservationFilter' configured for use","logger_name":"org.springframework.web.filter.ServerHttpObservationFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:12:59.837845+02:00","@version":"1","message":"9 mappings in 'requestMappingHandlerMapping'","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:12:59.861071+02:00","@version":"1","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:12:59.868797+02:00","@version":"1","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:12:59.88343+02:00","@version":"1","message":"ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:12:59.999815+02:00","@version":"1","message":"Started ProductServiceApplication in 1.255 seconds (process running for 1.461)","logger_name":"com.rekreation.springelk.ProductServiceApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-07-16T18:13:00.126757+02:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"RMI TCP Connection(3)-127.0.0.1","level":"INFO","level_value":20000}
{"@timestamp":"2025-07-16T18:13:00.126991+02:00","@version":"1","message":"Detected StandardServletMultipartResolver","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"RMI TCP Connection(3)-127.0.0.1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:13:00.127059+02:00","@version":"1","message":"Detected AcceptHeaderLocaleResolver","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"RMI TCP Connection(3)-127.0.0.1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:13:00.127112+02:00","@version":"1","message":"Detected FixedThemeResolver","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"RMI TCP Connection(3)-127.0.0.1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:13:00.127607+02:00","@version":"1","message":"Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2ae5580","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"RMI TCP Connection(3)-127.0.0.1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:13:00.127749+02:00","@version":"1","message":"Detected org.springframework.web.servlet.support.SessionFlashMapManager@780a91d0","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"RMI TCP Connection(3)-127.0.0.1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:13:00.127836+02:00","@version":"1","message":"enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"RMI TCP Connection(3)-127.0.0.1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:13:00.127913+02:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"RMI TCP Connection(3)-127.0.0.1","level":"INFO","level_value":20000}
{"@timestamp":"2025-07-16T18:13:00.156924+02:00","@version":"1","message":"MongoDB health check failed","logger_name":"org.springframework.boot.actuate.data.mongo.MongoHealthIndicator","thread_name":"RMI TCP Connection(1)-127.0.0.1","level":"WARN","level_value":30000,"stack_trace":"org.springframework.data.mongodb.UncategorizedMongoDbException: Exception authenticating MongoCredential{mechanism=SCRAM-SHA-1, userName='root', source='product-service', password=<hidden>, mechanismProperties=<hidden>}\n\tat org.springframework.data.mongodb.core.MongoExceptionTranslator.doTranslateException(MongoExceptionTranslator.java:151)\n\tat org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:74)\n\tat org.springframework.data.mongodb.core.MongoTemplate.potentiallyConvertRuntimeException(MongoTemplate.java:3033)\n\tat org.springframework.data.mongodb.core.MongoTemplate.execute(MongoTemplate.java:588)\n\tat org.springframework.data.mongodb.core.MongoTemplate.executeCommand(MongoTemplate.java:520)\n\tat org.springframework.boot.actuate.data.mongo.MongoHealthIndicator.doHealthCheck(MongoHealthIndicator.java:46)\n\tat org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)\n\tat org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37)\n\tat org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:82)\n\tat org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:41)\n\tat org.springframework.boot.actuate.health.HealthEndpointSupport.getLoggedHealth(HealthEndpointSupport.java:172)\n\tat org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:145)\n\tat org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateContribution(HealthEndpointSupport.java:156)\n\tat org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:141)\n\tat org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:110)\n\tat org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:81)\n\tat org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:76)\n\tat org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:66)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)\n\tat org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:74)\n\tat org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60)\n\tat org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:124)\n\tat org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:97)\n\tat java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)\n\tat java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)\n\tat java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)\n\tat java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)\n\tat java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)\n\tat java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)\n\tat java.base/jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)\n\tat java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)\n\tat java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:712)\n\tat java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:399)\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:842)\nCaused by: com.mongodb.MongoSecurityException: Exception authenticating MongoCredential{mechanism=SCRAM-SHA-1, userName='root', source='product-service', password=<hidden>, mechanismProperties=<hidden>}\n\tat com.mongodb.internal.connection.SaslAuthenticator.wrapException(SaslAuthenticator.java:300)\n\tat com.mongodb.internal.connection.SaslAuthenticator.getNextSaslResponse(SaslAuthenticator.java:143)\n\tat com.mongodb.internal.connection.SaslAuthenticator.lambda$authenticate$0(SaslAuthenticator.java:71)\n\tat com.mongodb.internal.connection.SaslAuthenticator.doAsSubject(SaslAuthenticator.java:307)\n\tat com.mongodb.internal.connection.SaslAuthenticator.authenticate(SaslAuthenticator.java:67)\n\tat com.mongodb.internal.connection.DefaultAuthenticator.authenticate(DefaultAuthenticator.java:53)\n\tat com.mongodb.internal.connection.InternalStreamConnectionInitializer.finishHandshake(InternalStreamConnectionInitializer.java:89)\n\tat com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:238)\n\tat com.mongodb.internal.connection.UsageTrackingInternalConnection.open(UsageTrackingInternalConnection.java:53)\n\tat com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection.open(DefaultConnectionPool.java:631)\n\tat com.mongodb.internal.connection.DefaultConnectionPool$OpenConcurrencyLimiter.openWithConcurrencyLimit(DefaultConnectionPool.java:978)\n\tat com.mongodb.internal.connection.DefaultConnectionPool$OpenConcurrencyLimiter.openOrGetAvailable(DefaultConnectionPool.java:908)\n\tat com.mongodb.internal.connection.DefaultConnectionPool.get(DefaultConnectionPool.java:198)\n\tat com.mongodb.internal.connection.DefaultServer.getConnection(DefaultServer.java:94)\n\tat com.mongodb.internal.binding.ClusterBinding$ClusterBindingConnectionSource.getConnection(ClusterBinding.java:138)\n\tat com.mongodb.client.internal.ClientSessionBinding$SessionBindingConnectionSource.getConnection(ClientSessionBinding.java:161)\n\tat com.mongodb.internal.operation.SyncOperationHelper.withSuppliedResource(SyncOperationHelper.java:148)\n\tat com.mongodb.internal.operation.SyncOperationHelper.lambda$withSourceAndConnection$1(SyncOperationHelper.java:130)\n\tat com.mongodb.internal.operation.SyncOperationHelper.withSuppliedResource(SyncOperationHelper.java:156)\n\tat com.mongodb.internal.operation.SyncOperationHelper.withSourceAndConnection(SyncOperationHelper.java:129)\n\tat com.mongodb.internal.operation.SyncOperationHelper.lambda$executeRetryableRead$4(SyncOperationHelper.java:195)\n\tat com.mongodb.internal.operation.SyncOperationHelper.lambda$decorateReadWithRetries$13(SyncOperationHelper.java:317)\n\tat com.mongodb.internal.async.function.RetryingSyncSupplier.get(RetryingSyncSupplier.java:67)\n\tat com.mongodb.internal.operation.SyncOperationHelper.executeRetryableRead(SyncOperationHelper.java:201)\n\tat com.mongodb.internal.operation.SyncOperationHelper.executeRetryableRead(SyncOperationHelper.java:180)\n\tat com.mongodb.internal.operation.CommandReadOperation.execute(CommandReadOperation.java:52)\n\tat com.mongodb.client.internal.MongoClusterImpl$OperationExecutorImpl.execute(MongoClusterImpl.java:424)\n\tat com.mongodb.client.internal.MongoDatabaseImpl.executeCommand(MongoDatabaseImpl.java:215)\n\tat com.mongodb.client.internal.MongoDatabaseImpl.runCommand(MongoDatabaseImpl.java:184)\n\tat com.mongodb.client.internal.MongoDatabaseImpl.runCommand(MongoDatabaseImpl.java:179)\n\tat org.springframework.data.mongodb.core.MongoTemplate.lambda$executeCommand$3(MongoTemplate.java:520)\n\tat org.springframework.data.mongodb.core.MongoTemplate.execute(MongoTemplate.java:586)\n\t... 45 common frames omitted\nCaused by: com.mongodb.MongoCommandException: Command failed with error 18 (AuthenticationFailed): 'Authentication failed.' on server localhost:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"Authentication failed.\", \"code\": 18, \"codeName\": \"AuthenticationFailed\"}\n\tat com.mongodb.internal.connection.ProtocolHelper.getCommandFailureException(ProtocolHelper.java:210)\n\tat com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:520)\n\tat com.mongodb.internal.connection.InternalStreamConnection.sendAndReceiveInternal(InternalStreamConnection.java:448)\n\tat com.mongodb.internal.connection.InternalStreamConnection.lambda$sendAndReceive$0(InternalStreamConnection.java:375)\n\tat com.mongodb.internal.connection.InternalStreamConnection.sendAndReceive(InternalStreamConnection.java:378)\n\tat com.mongodb.internal.connection.CommandHelper.sendAndReceive(CommandHelper.java:100)\n\tat com.mongodb.internal.connection.CommandHelper.executeCommand(CommandHelper.java:49)\n\tat com.mongodb.internal.connection.SaslAuthenticator.sendSaslStart(SaslAuthenticator.java:236)\n\tat com.mongodb.internal.connection.SaslAuthenticator.getNextSaslResponse(SaslAuthenticator.java:141)\n\t... 75 common frames omitted\n"}
{"@timestamp":"2025-07-16T18:13:29.581043+02:00","@version":"1","message":"GET \"/swagger-ui/swagger-initializer.js\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:13:29.587589+02:00","@version":"1","message":"Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:13:29.607361+02:00","@version":"1","message":"Completed 200 OK","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:13:29.618334+02:00","@version":"1","message":"GET \"/api-docs/swagger-config\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:13:29.618929+02:00","@version":"1","message":"Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:13:29.626188+02:00","@version":"1","message":"Using 'application/json', given [*/*] and supported [application/json]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:13:29.62802+02:00","@version":"1","message":"Writing [{configUrl=/api-docs/swagger-config, oauth2RedirectUrl=http://localhost:8080/swagger-ui/oauth2-redir (truncated)...]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:13:29.629819+02:00","@version":"1","message":"Completed 200 OK","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:13:29.637743+02:00","@version":"1","message":"GET \"/api-docs\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:13:29.638019+02:00","@version":"1","message":"Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:13:29.757235+02:00","@version":"1","message":"Using 'application/json', given [application/json, */*] and supported [application/json]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:13:29.757504+02:00","@version":"1","message":"Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 48, 46, 49, 34, 44, 34, 105, 110, 10 (truncated)...]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:13:29.757774+02:00","@version":"1","message":"Completed 200 OK","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:13:37.219667+02:00","@version":"1","message":"GET \"/api/product\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-5","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:13:37.221249+02:00","@version":"1","message":"Mapped to com.rekreation.springelk.controller.ProductController#getAllProducts()","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8080-exec-5","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:13:37.222215+02:00","@version":"1","message":"Getting all products","logger_name":"com.rekreation.springelk.controller.ProductController","thread_name":"http-nio-8080-exec-5","level":"INFO","level_value":20000}
{"@timestamp":"2025-07-16T18:13:37.259624+02:00","@version":"1","message":"Error getting all products","logger_name":"com.rekreation.springelk.controller.ProductController","thread_name":"http-nio-8080-exec-5","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.data.mongodb.UncategorizedMongoDbException: Exception authenticating MongoCredential{mechanism=SCRAM-SHA-1, userName='root', source='product-service', password=<hidden>, mechanismProperties=<hidden>}\n\tat org.springframework.data.mongodb.core.MongoExceptionTranslator.doTranslateException(MongoExceptionTranslator.java:151)\n\tat org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:74)\n\tat org.springframework.data.mongodb.core.MongoTemplate.potentiallyConvertRuntimeException(MongoTemplate.java:3033)\n\tat org.springframework.data.mongodb.core.MongoTemplate.executeFindMultiInternal(MongoTemplate.java:2953)\n\tat org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2622)\n\tat org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2600)\n\tat org.springframework.data.mongodb.core.MongoTemplate.find(MongoTemplate.java:887)\n\tat org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:404)\n\tat org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:146)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)\n\tat org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)\n\tat org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:734)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.mongodb.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:158)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)\n\tat jdk.proxy2/jdk.proxy2.$Proxy101.findAll(Unknown Source)\n\tat com.rekreation.springelk.service.ProductService.getAllProducts(ProductService.java:34)\n\tat com.rekreation.springelk.controller.ProductController.getAllProducts(ProductController.java:33)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\n\tat org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)\n\tat java.base/java.lang.Thread.run(Thread.java:842)\nCaused by: com.mongodb.MongoSecurityException: Exception authenticating MongoCredential{mechanism=SCRAM-SHA-1, userName='root', source='product-service', password=<hidden>, mechanismProperties=<hidden>}\n\tat com.mongodb.internal.connection.SaslAuthenticator.wrapException(SaslAuthenticator.java:300)\n\tat com.mongodb.internal.connection.SaslAuthenticator.getNextSaslResponse(SaslAuthenticator.java:143)\n\tat com.mongodb.internal.connection.SaslAuthenticator.lambda$authenticate$0(SaslAuthenticator.java:71)\n\tat com.mongodb.internal.connection.SaslAuthenticator.doAsSubject(SaslAuthenticator.java:307)\n\tat com.mongodb.internal.connection.SaslAuthenticator.authenticate(SaslAuthenticator.java:67)\n\tat com.mongodb.internal.connection.DefaultAuthenticator.authenticate(DefaultAuthenticator.java:53)\n\tat com.mongodb.internal.connection.InternalStreamConnectionInitializer.finishHandshake(InternalStreamConnectionInitializer.java:89)\n\tat com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:238)\n\tat com.mongodb.internal.connection.UsageTrackingInternalConnection.open(UsageTrackingInternalConnection.java:53)\n\tat com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection.open(DefaultConnectionPool.java:631)\n\tat com.mongodb.internal.connection.DefaultConnectionPool$OpenConcurrencyLimiter.openWithConcurrencyLimit(DefaultConnectionPool.java:978)\n\tat com.mongodb.internal.connection.DefaultConnectionPool$OpenConcurrencyLimiter.openOrGetAvailable(DefaultConnectionPool.java:908)\n\tat com.mongodb.internal.connection.DefaultConnectionPool.get(DefaultConnectionPool.java:198)\n\tat com.mongodb.internal.connection.DefaultServer.getConnection(DefaultServer.java:94)\n\tat com.mongodb.internal.binding.ClusterBinding$ClusterBindingConnectionSource.getConnection(ClusterBinding.java:138)\n\tat com.mongodb.client.internal.ClientSessionBinding$SessionBindingConnectionSource.getConnection(ClientSessionBinding.java:161)\n\tat com.mongodb.internal.operation.SyncOperationHelper.withSuppliedResource(SyncOperationHelper.java:148)\n\tat com.mongodb.internal.operation.SyncOperationHelper.lambda$withSourceAndConnection$1(SyncOperationHelper.java:130)\n\tat com.mongodb.internal.operation.SyncOperationHelper.withSuppliedResource(SyncOperationHelper.java:156)\n\tat com.mongodb.internal.operation.SyncOperationHelper.withSourceAndConnection(SyncOperationHelper.java:129)\n\tat com.mongodb.internal.operation.FindOperation.lambda$execute$2(FindOperation.java:296)\n\tat com.mongodb.internal.operation.SyncOperationHelper.lambda$decorateReadWithRetries$13(SyncOperationHelper.java:317)\n\tat com.mongodb.internal.async.function.RetryingSyncSupplier.get(RetryingSyncSupplier.java:67)\n\tat com.mongodb.internal.operation.FindOperation.execute(FindOperation.java:307)\n\tat com.mongodb.internal.operation.FindOperation.execute(FindOperation.java:70)\n\tat com.mongodb.client.internal.MongoClusterImpl$OperationExecutorImpl.execute(MongoClusterImpl.java:424)\n\tat com.mongodb.client.internal.MongoIterableImpl.execute(MongoIterableImpl.java:156)\n\tat com.mongodb.client.internal.MongoIterableImpl.iterator(MongoIterableImpl.java:116)\n\tat org.springframework.data.mongodb.core.MongoTemplate.executeFindMultiInternal(MongoTemplate.java:2940)\n\t... 82 common frames omitted\nCaused by: com.mongodb.MongoCommandException: Command failed with error 18 (AuthenticationFailed): 'Authentication failed.' on server localhost:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"Authentication failed.\", \"code\": 18, \"codeName\": \"AuthenticationFailed\"}\n\tat com.mongodb.internal.connection.ProtocolHelper.getCommandFailureException(ProtocolHelper.java:210)\n\tat com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:520)\n\tat com.mongodb.internal.connection.InternalStreamConnection.sendAndReceiveInternal(InternalStreamConnection.java:448)\n\tat com.mongodb.internal.connection.InternalStreamConnection.lambda$sendAndReceive$0(InternalStreamConnection.java:375)\n\tat com.mongodb.internal.connection.InternalStreamConnection.sendAndReceive(InternalStreamConnection.java:378)\n\tat com.mongodb.internal.connection.CommandHelper.sendAndReceive(CommandHelper.java:100)\n\tat com.mongodb.internal.connection.CommandHelper.executeCommand(CommandHelper.java:49)\n\tat com.mongodb.internal.connection.SaslAuthenticator.sendSaslStart(SaslAuthenticator.java:236)\n\tat com.mongodb.internal.connection.SaslAuthenticator.getNextSaslResponse(SaslAuthenticator.java:141)\n\t... 109 common frames omitted\n"}
{"@timestamp":"2025-07-16T18:13:37.262351+02:00","@version":"1","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8080-exec-5","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:13:37.262551+02:00","@version":"1","message":"Writing [[]]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8080-exec-5","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:13:37.263823+02:00","@version":"1","message":"Completed 200 OK","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-5","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:15:18.419068+02:00","@version":"1","message":"Starting ProductServiceApplicationTests using Java 17.0.11 with PID 50292 (started by tushartari in /Users/tushartari/tushar/tutorialprojects/springboot/product-service)","logger_name":"com.rekreation.springelk.ProductServiceApplicationTests","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-07-16T18:15:18.422646+02:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.rekreation.springelk.ProductServiceApplicationTests","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-07-16T18:15:18.49047+02:00","@version":"1","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@58e85c6f","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:15:27.316409+02:00","@version":"1","message":"Retrying pull for image: mongo:latest (116s remaining)","logger_name":"tc.mongo:latest","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-07-16T18:15:41.842504+02:00","@version":"1","message":"Starting ProductServiceApplication using Java 17.0.11 with PID 50342 (/Users/tushartari/tushar/tutorialprojects/springboot/product-service/target/classes started by tushartari in /Users/tushartari/tushar/tutorialprojects/springboot/product-service)","logger_name":"com.rekreation.springelk.ProductServiceApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-07-16T18:15:41.84674+02:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.rekreation.springelk.ProductServiceApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-07-16T18:15:42.606409+02:00","@version":"1","message":"Filter 'webMvcObservationFilter' configured for use","logger_name":"org.springframework.web.filter.ServerHttpObservationFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:15:42.845244+02:00","@version":"1","message":"9 mappings in 'requestMappingHandlerMapping'","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:15:42.873198+02:00","@version":"1","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:15:42.882648+02:00","@version":"1","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:15:42.899452+02:00","@version":"1","message":"ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:15:43.040384+02:00","@version":"1","message":"Started ProductServiceApplication in 1.454 seconds (process running for 1.664)","logger_name":"com.rekreation.springelk.ProductServiceApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-07-16T18:15:43.49152+02:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"RMI TCP Connection(3)-127.0.0.1","level":"INFO","level_value":20000}
{"@timestamp":"2025-07-16T18:15:43.491746+02:00","@version":"1","message":"Detected StandardServletMultipartResolver","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"RMI TCP Connection(3)-127.0.0.1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:15:43.491805+02:00","@version":"1","message":"Detected AcceptHeaderLocaleResolver","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"RMI TCP Connection(3)-127.0.0.1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:15:43.491849+02:00","@version":"1","message":"Detected FixedThemeResolver","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"RMI TCP Connection(3)-127.0.0.1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:15:43.492265+02:00","@version":"1","message":"Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7d82ca56","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"RMI TCP Connection(3)-127.0.0.1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:15:43.492404+02:00","@version":"1","message":"Detected org.springframework.web.servlet.support.SessionFlashMapManager@3387ab0","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"RMI TCP Connection(3)-127.0.0.1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:15:43.492486+02:00","@version":"1","message":"enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"RMI TCP Connection(3)-127.0.0.1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:15:43.492548+02:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"RMI TCP Connection(3)-127.0.0.1","level":"INFO","level_value":20000}
{"@timestamp":"2025-07-16T18:16:31.252198+02:00","@version":"1","message":"GET \"/swagger-ui/swagger-initializer.js\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:16:31.257078+02:00","@version":"1","message":"Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:16:31.272499+02:00","@version":"1","message":"Completed 200 OK","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:16:31.278893+02:00","@version":"1","message":"GET \"/api-docs/swagger-config\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:16:31.279481+02:00","@version":"1","message":"Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:16:31.287017+02:00","@version":"1","message":"Using 'application/json', given [*/*] and supported [application/json]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:16:31.289274+02:00","@version":"1","message":"Writing [{configUrl=/api-docs/swagger-config, oauth2RedirectUrl=http://localhost:8080/swagger-ui/oauth2-redir (truncated)...]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:16:31.291056+02:00","@version":"1","message":"Completed 200 OK","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:16:31.293949+02:00","@version":"1","message":"GET \"/api-docs\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:16:31.294296+02:00","@version":"1","message":"Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:16:31.459915+02:00","@version":"1","message":"Using 'application/json', given [application/json, */*] and supported [application/json]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:16:31.460194+02:00","@version":"1","message":"Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 48, 46, 49, 34, 44, 34, 105, 110, 10 (truncated)...]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:16:31.460472+02:00","@version":"1","message":"Completed 200 OK","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:16:37.514345+02:00","@version":"1","message":"GET \"/api/product\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-5","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:16:37.516217+02:00","@version":"1","message":"Mapped to com.rekreation.springelk.controller.ProductController#getAllProducts()","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8080-exec-5","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:16:37.517302+02:00","@version":"1","message":"Getting all products","logger_name":"com.rekreation.springelk.controller.ProductController","thread_name":"http-nio-8080-exec-5","level":"INFO","level_value":20000}
{"@timestamp":"2025-07-16T18:16:37.594884+02:00","@version":"1","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8080-exec-5","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:16:37.595704+02:00","@version":"1","message":"Writing [[ProductResponse[id=6877b7e83f2d8bb3cd894c18, name=Iphone16, description=New I phone, price=1110]]]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8080-exec-5","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:16:37.597747+02:00","@version":"1","message":"Completed 200 OK","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-5","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:18:20.945041+02:00","@version":"1","message":"POST \"/api/product\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-7","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:18:20.954523+02:00","@version":"1","message":"Mapped to com.rekreation.springelk.controller.ProductController#createProduct(ProductRequest)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8080-exec-7","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:18:21.017456+02:00","@version":"1","message":"Could not resolve parameter [0] in public com.rekreation.springelk.dto.ProductResponse com.rekreation.springelk.controller.ProductController.createProduct(com.rekreation.springelk.dto.ProductRequest): JSON parse error: Unexpected character ('s' (code 115)): was expecting comma to separate Object entries","logger_name":"org.springframework.web.method.HandlerMethod","thread_name":"http-nio-8080-exec-7","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:18:21.019916+02:00","@version":"1","message":"Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('s' (code 115)): was expecting comma to separate Object entries]","logger_name":"org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver","thread_name":"http-nio-8080-exec-7","level":"WARN","level_value":30000}
{"@timestamp":"2025-07-16T18:18:21.020017+02:00","@version":"1","message":"Completed 400 BAD_REQUEST","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-7","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:18:21.0248+02:00","@version":"1","message":"\"ERROR\" dispatch for POST \"/error\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-7","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:18:21.025282+02:00","@version":"1","message":"Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8080-exec-7","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:18:21.029293+02:00","@version":"1","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread_name":"http-nio-8080-exec-7","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:18:21.029745+02:00","@version":"1","message":"Writing [{timestamp=Wed Jul 16 18:18:21 CEST 2025, status=400, error=Bad Request, path=/api/product}]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread_name":"http-nio-8080-exec-7","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-07-16T18:18:21.032333+02:00","@version":"1","message":"Exiting from \"ERROR\" dispatch, status 400","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-7","level":"DEBUG","level_value":10000}
